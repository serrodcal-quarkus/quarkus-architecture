apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
spec:
  ports:
    - name: http-requests
      port: 9200
      targetPort: 9200
      protocol: TCP
    - name: http-nodes
      port: 9300
      targetPort: 9300
      protocol: TCP
  selector:
    app: elasticsearch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9200
              protocol: TCP
            - containerPort: 9300
              protocol: TCP
          env:
            - name: ES_JAVA_OPTS
              value: -Xms512m -Xmx512m
          resources:
            requests:
              memory: 500M
              cpu: 500m
            limits:
              memory: 2G
              cpu: 1000m
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
spec:
  ports:
    - name: http-gelf
      port: 12201
      targetPort: 12201
      protocol: UDP
    - name: http-beats
      port: 5000
      targetPort: 5000
      protocol: TCP
    - name: http-requests
      port: 9600
      targetPort: 9600
      protocol: TCP
  selector:
    app: logstash
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash-oss:6.8.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 12201
              protocol: UDP
            - containerPort: 5000
              protocol: TCP
            - containerPort: 9600
              protocol: TCP
          resources:
            requests:
              memory: 500M
              cpu: 500m
            limits:
              memory: 1G
              cpu: 1000m
          volumeMounts:
          - name: logstash-config
            mountPath: /usr/share/logstash/pipeline/gelf.conf
            subPath: gelf.conf
      volumes:
      - name: logstash-config
        configMap:
          name: logstash-cm
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: logstash-cm
data:
  gelf.conf: |
    input {
      gelf {
        port => 12201
      }
    }
    output {
      stdout {}
      elasticsearch {
        hosts => ["http://elasticsearch:9200"]
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
spec:
  ports:
    - name: http-dashboard
      port: 5601
      targetPort: 5601
      protocol: TCP
  selector:
    app: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana-oss:6.8.2
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5601
              protocol: TCP
          resources:
            requests:
              memory: 500M
              cpu: 500m
            limits:
              memory: 1G
              cpu: 1000m
          volumeMounts:
          - name: kibana-config
            mountPath: /usr/share/kibana/config/kibana.yml
            subPath: kibana.yml
      volumes:
      - name: kibana-config
        configMap:
          name: kibana-cm
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kibana-cm
data:
  kibana.yml: |
    # Default Kibana configuration for docker target
    server.name: kibana
    server.host: "0"
    elasticsearch.hosts: [ "http://elasticsearch:9200" ]
    # Configuration to expose the dashboard through the API Gateway
    server.basePath: "/kibana"
    server.rewriteBasePath: true
