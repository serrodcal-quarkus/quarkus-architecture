apiVersion: v1
kind: Service
metadata:
  name: hr
  annotations:
    prometheus.io/should_be_scraped: "true"
spec:
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app: hr
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hr
  template:
    metadata:
      labels:
        app: hr
      annotations:
        prometheus.io/should_be_scraped: "true"
        prometheus.io/metric_path: "/metrics"
        prometheus.io/scrape_port: "8080"
        prometheus.io/scrape_scheme: "http"
    spec:
      containers:
        - name: hr
          #image: serrodcal/hr:1.0.1
          image: serrodcal/hr-native:1.1.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: EMPLOYEE_URL
              value: http://employee:8080/api/v1
            - name: DEPARTMENT_URL
              value: http://department:8080/api/v1
          resources:
            requests:
              memory: 350M
              cpu: 350m
            limits:
              memory: 350M
              cpu: 350m
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health/live
              port: 8080
            initialDelaySeconds: 4
            periodSeconds: 15
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hr
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hr
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
